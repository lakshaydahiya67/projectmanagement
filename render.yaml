services:
  - type: web
    name: projectmanagement-backend
    env: python
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn projectmanagement.wsgi:application --log-file -
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: projectmanagement.settings
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: 'False'
      - key: ALLOWED_HOSTS
        value: 'projectmanagement-backend.onrender.com,projectmanagement.onrender.com,localhost,127.0.0.1'
      - key: FRONTEND_URL
        value: 'https://projectmanagement.onrender.com'
      - key: DATABASE_URL
        fromDatabase:
          name: projectmanagement-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis
          type: redis
          property: connectionString
    plan: free

  - type: web
    name: projectmanagement-frontend
    env: node
    buildCommand: |
      cd frontend
      npm install
      npm run build
    staticPublishPath: ./frontend/build
    envVars:
      - key: REACT_APP_API_URL
        value: 'https://projectmanagement-backend.onrender.com/api/v1'
      - key: REACT_APP_WS_URL
        value: 'wss://projectmanagement-backend.onrender.com/ws/'
    routes:
      - type: rewrite
        source: '/*'
        destination: '/index.html'
    plan: free

databases:
  - name: projectmanagement-db
    databaseName: projectmanagement
    user: projectmanagement
    plan: free

crons:
  - name: cleanup-sessions
    schedule: '@daily'
    command: python manage.py clearsessions
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: projectmanagement.settings
      - key: DATABASE_URL
        fromDatabase:
          name: projectmanagement-db
          property: connectionString