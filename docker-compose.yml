version: '3.8'

services:
  # Redis service for caching, WebSockets and Celery
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Django service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./abc.txt:/app/abc.txt
      - sqlite_data:/data
    entrypoint: ["/app/docker/entrypoint-backend.sh"]
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=projectmanagement.settings
      - DATABASE_PATH=/data/db.sqlite3
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Celery worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery_worker
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./abc.txt:/app/abc.txt
    entrypoint: ["/app/docker/entrypoint-celery.sh"]
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=projectmanagement.settings
      - DATABASE_PATH=/data/db.sqlite3
    networks:
      - app_network

  # Celery beat for scheduled tasks
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery_beat
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./abc.txt:/app/abc.txt
    entrypoint: ["/app/docker/entrypoint-celerybeat.sh"]
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=projectmanagement.settings
      - DATABASE_PATH=/data/db.sqlite3
    networks:
      - app_network

  # Frontend React service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data:
  sqlite_data: 