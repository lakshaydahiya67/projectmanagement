# Django Project Environment Variables
# This file serves as a template. Copy it to .env and fill in your actual values.
# See ENV_DOCS.md for detailed descriptions of each variable.

# Core Django Settings
DJANGO_SECRET_KEY=your-actual-secret-key # IMPORTANT: Change this to a unique, secret key!
DJANGO_DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1
DEFAULT_PAGE_SIZE=10

# ---------------------------------------------------
# Local Development Environment Variables
# ---------------------------------------------------
# These are typically used when running the application directly on your machine (e.g., python manage.py runserver)

SITE_URL=http://localhost:3000 # Used for generating absolute URLs in emails, should match your frontend's URL
FRONTEND_URL=http://localhost:3000 # The URL where your frontend application is running
BACKEND_URL=http://localhost:8000/api/v1 # The URL for your Django backend API
WEBSOCKET_URL=ws://localhost:8000/ws # The URL for your Django Channels WebSocket server

DATABASE_PATH=db.sqlite3 # Path to your SQLite database file (relative to manage.py)
# For PostgreSQL (example, adjust as needed):
# DATABASE_URL=postgres://user:password@host:port/dbname

REDIS_HOST=localhost
REDIS_PORT=6379
CELERY_BROKER_URL=redis://localhost:6379/0 # URL for Celery message broker (Redis)
CELERY_RESULT_BACKEND=redis://localhost:6379/0 # URL for Celery task result backend (Redis)

CORS_ALLOWED_ORIGINS=http://localhost:3000 # Comma-separated list of allowed origins for CORS
CSRF_TRUSTED_ORIGINS=http://localhost:3000 # Comma-separated list of trusted origins for CSRF
CORS_ALLOW_ALL_ORIGINS=True # Set to False in production for better security

# Email Configuration (for local development, emails are printed to the console)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# EMAIL_HOST=
# EMAIL_PORT=
# EMAIL_USE_TLS=
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=noreply@example.com

# JWT Settings
JWT_SIGNING_KEY=your-local-jwt-signing-key # IMPORTANT: Change this to a unique, secret key!
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=60
JWT_REFRESH_TOKEN_LIFETIME_DAYS=7

# ---------------------------------------------------
# Docker Environment Variables
# ---------------------------------------------------
# These are typically used when running the application within Docker containers (e.g., via docker-compose)
# Uncomment and adjust these as needed if you are using Docker.

# ALLOWED_HOSTS=localhost,127.0.0.1,backend,web # Add service names if needed

# SITE_URL=http://localhost # Adjust if your Docker setup exposes the frontend on a different port/domain
# FRONTEND_URL=http://localhost
# BACKEND_URL=http://localhost/api/v1 # Assumes a reverse proxy routes /api/v1 to the backend container
# WEBSOCKET_URL=ws://localhost/ws     # Assumes a reverse proxy routes /ws to the WebSocket container

# DATABASE_PATH=/app/data/db.sqlite3 # Path inside the Docker container, ensure it's mapped to a volume
# For PostgreSQL in Docker (example):
# DATABASE_URL=postgres://user:password@db_service_name:5432/dbname

# REDIS_HOST=redis # Docker service name for Redis
# REDIS_PORT=6379
# CELERY_BROKER_URL=redis://redis:6379/0
# CELERY_RESULT_BACKEND=redis://redis:6379/0

# CORS_ALLOWED_ORIGINS=http://localhost
# CSRF_TRUSTED_ORIGINS=http://localhost
# CORS_ALLOW_ALL_ORIGINS=True # Consider setting to False in a production Docker setup

# Email Configuration (for Docker, potentially using a real SMTP server)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@example.com
# EMAIL_HOST_PASSWORD=your-email-password
# DEFAULT_FROM_EMAIL=noreply@example.com

# JWT Settings (for Docker)
# JWT_SIGNING_KEY=your-docker-jwt-signing-key # IMPORTANT: Change this!
# JWT_ACCESS_TOKEN_LIFETIME_MINUTES=60
# JWT_REFRESH_TOKEN_LIFETIME_DAYS=7

# Django Superuser (for initial setup, often used in entrypoint scripts)
# DJANGO_SUPERUSER_USERNAME=admin
# DJANGO_SUPERUSER_EMAIL=admin@example.com
# DJANGO_SUPERUSER_PASSWORD=changeme

# Render.com Specific (if deploying to Render)
# RENDER=true
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True